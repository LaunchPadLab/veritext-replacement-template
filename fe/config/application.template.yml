development:
  NODE_ENV: development
  PROXY_ENFORCE: 'false'
  PROXIED_API_URL: ''
  PROXIED_API_TOKEN: ''

  # === FE ===
  API_URL: http://localhost:8080/api/v1
  FE_PORT: 3000


  # === BE ===
  # PORT
  PORT: 8080

  # LOG
  LOG_FORMAT: dev
  LOG_DIR: ../logs

  # CORS
  ORIGIN: "*"
  CREDENTIALS: true

  # DATABASE
  DATABASE_URL: your-local-postgres-url

  # SWAGGER
  SWAGGER_SERVER_URL: http://localhost:3000
  SWAGGER_ENDPOINT: /api-docs

  # API
  BASE_PATH: /api/v1
  SERVER_STATIC_BUILD: 'false'

test:
  NODE_ENV: test
  PROXY_ENFORCE: 'false'
  PROXIED_API_URL: ''
  PROXIED_API_TOKEN: ''

  # === FE ===
  API_URL: http://localhost:8080/api/v1
  FE_PORT: 3000


  # === BE ===
  # PORT
  PORT: 8080

  # LOG
  LOG_FORMAT: test
  LOG_DIR: ../../../tmp

  # CORS
  ORIGIN: "*"
  CREDENTIALS: true

  # DATABASE
  DATABASE_URL: your-local-postgres-url

  # SWAGGER
  SWAGGER_SERVER_URL: http://localhost:3000
  SWAGGER_ENDPOINT: /api-docs

  # API
  BASE_PATH: /api/v1
  SERVER_STATIC_BUILD: 'true'

production:
  NODE_ENV: production
  ENV: production
  PROXY_ENFORCE: false
  PROXIED_API_URL: ''
  PROXIED_API_TOKEN: ''

  # === FE ===
  API_URL: /api/v1

  # === BE ===
  # PORT
  PORT: 8080

  # LOG
  LOG_FORMAT: prod
  LOG_DIR: ../../../tmp

  # CORS
  ORIGIN: "*" # we'll want to limit CORS in prod once we have a domain
  CREDENTIALS: true

  # SWAGGER_SERVER_URL: http://localhost:3000
  # SWAGGER_ENDPOINT: /api-docs

  # API
  BASE_PATH: /api/v1
  SERVER_STATIC_BUILD: 'true'

  # DATABASE
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/veritext_box
  SHADOW_DATABASE_URL: your-production-shadow-postgres-url
